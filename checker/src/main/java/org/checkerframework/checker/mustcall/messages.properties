inconsistent.mustcall.subtype=%s is annotated as %s, but one of its supertypes is annotated %s
createsmustcallfor.target.unparseable=The method %s is annotated as @CreatesMustCallFor, but the target (%s) was unparseable in the current context. Rewrite your code so that the relevant expression is a local variable.
mustcall.not.inheritable=@MustCall annotation is not inherited by subclasses. Use @InheritableMustCall instead.
prohibited.owningcollection.assignment=Assigning to an @OwningCollection array index outside of a designated loop.
owningcollection.allocation.unsuccessful=Method body seems to be allocating/deallocating an @OwningCollection, but the pattern-match failed. Make sure the loop header is of the form: for (int i = 0; i < %s/%s.length; i++/++i)
unexpected.collection.expression=Collection/Array expected, but checker cannot resolve a Collection/Array here. Please use a Collection/Array identifier directly instead of something like a method call or field reference for an allocating for-loop.
