owningcollection.allocation.unsuccessful=Header of an allocating loop is expected to be: int i=0; i < %s.length; i++/++i
unexpected.collection.expression=Indexed @OwningCollection must be an identifier.
unexpected.rhs.allocatingassignment=RHS exptected to be a newly constructed resource.
unexpected.argument.ownership=Parameter and argument must have the same @OwningCollection annotation.
argument.with.revoked.ownership=%s does not have ownership and may not be passed as an argument.
modification.without.ownership=%s does not have ownership over its elements. It may not write to or remove elements from the underlying collection.
illegal.owningcollection.write=An entry of @OwningCollection %s is possibly overwritten with possibly open obligations: %s. Overwriting writes on an @OwningCollection are only allowed if the collection has no open calling obligations.
